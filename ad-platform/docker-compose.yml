networks:
  avito-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  avatar-image-data:
    driver: local
  ad-image-data:
    driver: local

services:

  db:
    image: postgres:17.5
    container_name: avito-db
    restart: unless-stopped
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - avito-network

  cache:
    image: redis:7.2-alpine
    container_name: avito-cache
    restart: unless-stopped
    volumes:
      - ./redis-data:/data
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - avito-network

  app:
    # Get latest/stable/whatever image from external/internal repository:
    #image: ghcr.io/taker1974/tk-classified-ads-platform:1.0.0
    image: tk-classified-ads-platform
    container_name: avito-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    volumes:
      - ./avatar-image-data:/home/kostus/ad-avatar
      - ./ad-image-data:/home/kostus/ad-image
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      SERVER_ADDRESS: ${SERVER_ADDRESS}
      SERVER_PORT: ${SERVER_PORT}
    networks:
      - avito-network

  web:
    image: ghcr.io/dmitry-bizin/front-react-avito:v1.21
    container_name: avito-web
    restart: unless-stopped
    ports:
      - "3000:3000"
    healthcheck:
      test: "curl --fail http://localhost:3000 || exit 1"
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    # This container must be started standalone due to it's config issues.
    # Web app works with http://localhost:8080 only.
    # networks:
    #   - avito-network
